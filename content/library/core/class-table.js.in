// ////////////////////////////////////////////////////////////////////////
//
// @file class-table.js
// 
// @brief Javascript implementation of basic utilities for live data tables
//
// @details 
// This file implements table-related client-side tools and utilities.
//
// ////////////////////////////////////////////////////////////////////////

// All modules have a name to identify themselves.
var ak_module='class-table';
var ak_cookiePrefix='jof-';

// ////////////////////////////////////////////////////////////////////////
//
// NOTE: A document may contain multiple simultaneously editable tables,
//       with each one triggering a call to akTable_scan() at the end of
//       its form div.
// ////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////
// AK_Table_Cell -- object class for a table cell
//
// Attributes:
// format_class -- If given, an additional format class for skin
// format -- String of chars to use for formatting info
// contents -- Basic cell contents
function AK_Table_Cell(contents, format_simple, format_class)
{
    this.contents = contents;
    this.format_simple = format_simple;
    this.format_class = format_class;
}

// ////////////////////////////////////////////////////////////////////////
// AK_Class_Table -- object class for editable data tables
//
// Attributes:
// title -- Basic table title
// tag -- tag prefix for DOM ids related to this table
// width -- Number of columns in this table
// height -- Number of rows in this table
// backing -- Path to file backing store
// rows -- Array of row objects
//
// ////////////////////////////////////////////////////////////////////////
// AK_Table_Label -- object class for table labels, names, IDs, etc.
//
// Attributes:
// prefix -- Basic table nameinfo
// tag -- tag identifier for DOM ids related to this table
// column -- Column number
// row -- Row number
//
// For example, "table-meta-t54682_0-0"
//    prefix = "table-meta"
//    tag = "t54682"
//    column = 0
//    row = 0
//
// Prefix is optional.  If only one of column/row is present, it's row.
function AK_Table_Label(label)
{
    this.prefix="";
    this.tag="";
    this.column=-1;
    this.row=-1;
    // Actually parse the label into the members
    this.parse(label);
}

AK_Table_Label.prototype.parse = function(label) {
    var tmpArray;
    var textArray;
    var geomArray;

    try {
        tmpArray = label.split('_');

        textArray = tmpArray[0].split('-');
        geomArray = tmpArray[1].split('-');

        this.tag = textArray[textArray.length-1];
        if (textArray.length > 1) {
            textArray.length--;
            this.prefix = textArray[0];
            for (var i = 1; i < textArray.length; i++) {
                this.prefix += '-' + textArray[i];
            }
        }
        if (geomArray.length > 1) {
            this.column = parseInt(geomArray.shift());
        }
        this.row = parseInt(geomArray.shift());
    } catch (err) {}
}

AK_Table_Label.prototype.toString = function() {
    var ret = "" ;

    if (this.prefix.length > 0) ret += this.prefix + '-';
    ret += this.tag;
    // Only add geometry if we have _something_
    if (this.row >= 0 ) {
        ret += "_";
        if (this.column >= 0)  {
            ret += this.column + '-';
        }
        ret += this.row;
    }

    return ret;
}



// ////////////////////////////////////////////////////////////////////////
// akTable_scan - Scan the document to load table data.
//
// @param domtag -- The tag for a particular table.
//
// After the code for each editable table's form DIV, add a call to this
// function to create a JS object for the table.
//
//
function akTable_scan(domtag)
{
    var editableTables = document.getElementById(domtag);
}


function akTable_appendRow(domtag)
{
    var heightEle;
    var height;
    var lbl;
    /* Step 1: Update the table height */
    heightEle = document.getElementById("table-height-"+domtag);
    height = parseInt(heightEle.value); 
    height++;
    heightEle.value = "" + height;
}

function akTable_renumberRow(domtag,pos,newpos) 
{
    /* Step 1:  */
}
