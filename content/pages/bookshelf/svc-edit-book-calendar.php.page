<?php
// PHP bookshelf page to emit calendar/event editor form

?>
<?php
/* Step 0: Includes */
require_once("library/core/util-config.php");
require_once("library/core/util-db.php");
require_once("library/core/class-book.php");
require_once("library/core/class-story.php");
require_once("library/core/class-form.php");
require_once("library/core/class-notebook.php");

/* Step 1: Pull info from DB */
$book = config_getParameter('edit-book-object');

/* Step 2: Start intro story */
$ss = new akStory("edit-calendar-story");
$ss->createSimpleChunk(STORY_CHUNK_SECTION,"Event editor");
$ss->emit();

/* Step 3: Create an editor notebook */
  /* Step 3.1: Editor page for NEW event entry */
$editPage = new akNotePage("edit-new","New Event");
$editForm = new akForm("event-edit-form",
                       "/svc-process-book-calendar.php",
                       FORM_METHOD_POST);
  /* Add a couple of hidden fields for data tracking */
$editForm->createSimpleItem("event-edit-book",FORM_ITEM_HIDDEN,
                            "event-edit-book",$book->id);
$editForm->createSimpleItem("event-edit-mode",FORM_ITEM_HIDDEN,
                            "event-edit-mode","new");
$editForm->createSimpleItem("event-edit-date",FORM_ITEM_DATE,
                            "event-edit-date","00/00/0000",
                            "Date of delivery:");
  /* event series: Selection list with the default entry as the most
   * recently-added event series title.
   */
$editForm->createSimpleItem("event-edit-series",FORM_ITEM_SELECT,
                            "event-edit-series",null,
                            "Select Series");
$editForm->lastSimpleItem->addEvent("onChange","el=document.getElementById('event-edit-newseries-row'); cs=document.getElementById('event-current-series'); if (this.selectedIndex == 0) {el.style.display='table-row';} else {el.style.display='none'; cs.value=this.options[this.selectedIndex].text;};");
$editForm->lastSimpleItem->addOption(0,"(NEW SERIES: Enter new series below)");
$is_default = true;
foreach ($seriesList as $series) {
  $slabel= $series->title;
  if (null != $series->subtitle) $slabel .= ': '.$series->subtitle;
  $editForm->lastSimpleItem->addOption($series->id, $slabel, $is_default);
  $is_default = false;
}
$editForm->createSimpleItem("event-edit-newseries",FORM_ITEM_TEXT,
                            "event-edit-newseries",null,
                            "New series:");
$editForm->lastSimpleItem->hsize = 40;
$editForm->lastSimpleItem->addRowStyle("display","none");
$editForm->createSimpleItem("event-edit-title",FORM_ITEM_TEXT,
                            "event-edit-title",null,
                            "event title:");
$editForm->lastSimpleItem->hsize = 40;
$editForm->createSimpleItem("event-edit-notes",FORM_ITEM_TEXTAREA,
                            "event-edit-notes",null,
                            "Notes:");
$editForm->lastSimpleItem->hsize = 40;
$editForm->lastSimpleItem->vsize = 20;
$editForm->createSimpleItem("event-edit-save",FORM_ITEM_SUBMIT,
                            "event-edit-save","Save this entry");
$editPage->adopt($editForm);

  /* Step 3.2: event series editor */
$seriesPage = new akNotePage("series","Edit Series");
$seriesForm = new akForm("event-series-form");

$seriesForm->createSimpleItem("event-edit-mode",FORM_ITEM_HIDDEN,
                            "event-edit-mode","series");

//$seriesList = db_seriesByBook($book->id);
$seriesForm->createSimpleItem("series-edit-title",FORM_ITEM_TEXT,
                              "series-edit-title","New Series",
                              "Series Title:");

$seriesPage->adopt($seriesForm);

  /* Step 3.3: Book Properties page */
$propPage = new akNotePage("properties","Book Properties");



  /* Step 4: Make the notebook */
$editBook = new akNotebook("edit-event-notebook");
$editBook->adopt($editPage);
$editBook->adopt($seriesPage);
//$editBook->adopt($propPage);

$editBook->emit();

?>
