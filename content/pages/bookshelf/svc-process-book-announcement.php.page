<?php
/*
 * svc-process-book-announcement -- Service to process an 'announcement'
 *    book edit.
 *
 * NOTES:
 *   A 'announcement' is a short notice to list on the front page,
 *   with headline and body text.
 */
/* Step 1: Get current user auth info */
require_once("library/core/util-db.php");
require_once("library/core/util-auth.php");
require_once("library/core/class-story.php");
require_once("library/core/util-skin.php");
auth_validate();

function get_field($field)
{
  if (!isset($_REQUEST[$field])) return null;
  if (null == $_REQUEST[$field]) return null;
  if (strlen($_REQUEST[$field]) < 1) return null;
  return $_REQUEST[$field];
}


/* Step 2: Create a story entry object from fields */
$st = new akStoryEntry();

$st->title = get_field('announcement-edit-title');
$st->book = get_field('announcement-edit-book');
$st->author = $auth_user->uid;

/* Step 3: Create file to store text */
  /* Step 3.1: Setup */
$notes_time=time();
$notes_dir=config_getBookDir($st->book)."/".date("Y",$notes_time)."/".date("m-d",$notes_time);
$notes_file=date("H-i-s",$notes_time).".html";
$st->text=$notes_dir."/".$notes_file;
  /* Step 3.1: Make containing directory */
if (!is_dir($notes_dir)) mkdir($notes_dir,0755,true);
if (!is_dir($notes_dir)) {
  /* Can't make storage dir? */
  print '[[Failed to create directory for text storage, text will not be saved.]]';
} else {
  file_put_contents($st->text,stripslashes(get_field('announcement-edit-notes')));
}

/* Step 4: Push it into the DB */
$res = new akStory();
if (db_saveStory($st)) {
  $res->createSimpleChunk(STORY_CHUNK_SECTION,"Announcement Edit: Success");
  $res->createSimpleChunk(STORY_CHUNK_TEXT,"Announcement info saved successfully to database, and should be available on the front page immediately.");
}else {
  $res->createSimpleChunk(STORY_CHUNK_SECTION,"Announcement Edit: Failure");
  $res->createSimpleChunk(STORY_CHUNK_TEXT,"The update failed during database update. Please try again later.");
}

$res->emit();

?>
